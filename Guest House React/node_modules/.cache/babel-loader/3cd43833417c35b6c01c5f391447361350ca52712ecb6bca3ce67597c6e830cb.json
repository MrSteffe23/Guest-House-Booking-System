{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stef_\\\\Desktop\\\\frontend\\\\src\\\\components\\\\ImageUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploadForm(_ref) {\n  _s();\n  let {\n    type\n  } = _ref;\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!file) {\n      console.error('No file selected');\n      return;\n    }\n    const formData = new FormData();\n    for (let i = 0; i < file.length; i++) {\n      formData.append('image', file[i]);\n    }\n    axios.post(`/api/v1/images/${type}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(() => {\n      console.log('Images uploaded successfully');\n      // Do something on successful upload\n    }).catch(error => {\n      console.error('Error uploading images:', error);\n      // Handle upload error\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      multiple: true,\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploadForm, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = ImageUploadForm;\nexport default ImageUploadForm;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploadForm","_ref","_s","type","file","setFile","handleFileChange","event","target","files","handleSubmit","preventDefault","console","error","formData","FormData","i","length","append","post","headers","then","log","catch","onSubmit","children","accept","multiple","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/stef_/Desktop/frontend/src/components/ImageUploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ImageUploadForm({type}) {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  \r\n    if (!file) {\r\n      console.error('No file selected');\r\n      return;\r\n    }\r\n  \r\n    const formData = new FormData();\r\n  \r\n    for (let i = 0; i < file.length; i++) {\r\n      formData.append('image', file[i]);\r\n    }\r\n  \r\n    axios\r\n      .post(`/api/v1/images/${type}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      })\r\n      .then(() => {\r\n        console.log('Images uploaded successfully');\r\n        // Do something on successful upload\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error uploading images:', error);\r\n        // Handle upload error\r\n      });\r\n  };\r\n  \r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"file\" accept=\"image/*\" multiple  onChange={handleFileChange} />\r\n      <button type=\"submit\">Upload Image</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ImageUploadForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAAC,IAAA,EAAS;EAAAC,EAAA;EAAA,IAAR;IAACC;EAAI,CAAC,GAAAF,IAAA;EAC7B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACP,IAAI,EAAE;MACTQ,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;MACjC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAE/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,IAAI,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;MACpCF,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAEd,IAAI,CAACY,CAAC,CAAC,CAAC;IACnC;IAEAnB,KAAK,CACFsB,IAAI,CAAE,kBAAiBhB,IAAK,EAAC,EAAEW,QAAQ,EAAE;MACxCM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDC,IAAI,CAAC,MAAM;MACVT,OAAO,CAACU,GAAG,CAAC,8BAA8B,CAAC;MAC3C;IACF,CAAC,CAAC,CACDC,KAAK,CAAEV,KAAK,IAAK;MAChBD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC,CAAC;EACN,CAAC;;EAGD,oBACEd,OAAA;IAAMyB,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBAC3B1B,OAAA;MAAOI,IAAI,EAAC,MAAM;MAACuB,MAAM,EAAC,SAAS;MAACC,QAAQ;MAAEC,QAAQ,EAAEtB;IAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5EjC,OAAA;MAAQI,IAAI,EAAC,QAAQ;MAAAsB,QAAA,EAAC;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEX;AAAC9B,EAAA,CA5CQF,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AA8CxB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}