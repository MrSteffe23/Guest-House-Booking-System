{"ast":null,"code":"import classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useContext, useState } from 'react';\nimport { ConfigContext } from '../config-provider/context';\nimport Popover from '../popover';\nimport theme from '../theme';\nimport ColorPickerPanel from './ColorPickerPanel';\nimport ColorTrigger from './components/ColorTrigger';\nimport useColorState from './hooks/useColorState';\nimport useStyle from './style/index';\nimport { customizePrefixCls, generateColor } from './util';\nimport genPurePanel from '../_util/PurePanel';\nconst ColorPicker = props => {\n  const {\n    value,\n    defaultValue,\n    format,\n    allowClear = false,\n    presets,\n    children,\n    trigger = 'click',\n    open,\n    disabled,\n    placement = 'bottomLeft',\n    arrow = true,\n    style,\n    className,\n    rootClassName,\n    styles,\n    onFormatChange,\n    onChange,\n    onOpenChange,\n    getPopupContainer\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = useContext(ConfigContext);\n  const {\n    token\n  } = theme.useToken();\n  const [colorValue, setColorValue] = useColorState(token.colorPrimary, {\n    value,\n    defaultValue\n  });\n  const [popupOpen, setPopupOpen] = useMergedState(false, {\n    value: open,\n    postState: openData => !disabled && openData,\n    onChange: onOpenChange\n  });\n  const [clearColor, setClearColor] = useState(false);\n  const prefixCls = getPrefixCls('color-picker', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mergeRootCls = classNames(rootClassName, {\n    [`${prefixCls}-rtl`]: direction\n  });\n  const mergeCls = classNames(mergeRootCls, className, hashId);\n  const handleChange = data => {\n    const color = generateColor(data);\n    if (clearColor && color.toHsb().a > 0) {\n      setClearColor(false);\n    }\n    if (!value) {\n      setColorValue(color);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(color, color.toHexString());\n  };\n  const handleClear = clear => {\n    setClearColor(clear);\n  };\n  const popoverProps = {\n    open: popupOpen,\n    trigger,\n    placement,\n    arrow,\n    rootClassName,\n    getPopupContainer\n  };\n  const colorBaseProps = {\n    prefixCls,\n    color: colorValue,\n    allowClear,\n    clearColor,\n    disabled,\n    presets,\n    format,\n    onFormatChange\n  };\n  return wrapSSR( /*#__PURE__*/React.createElement(Popover, Object.assign({\n    style: styles === null || styles === void 0 ? void 0 : styles.popup,\n    onOpenChange: setPopupOpen,\n    content: /*#__PURE__*/React.createElement(ColorPickerPanel, Object.assign({}, colorBaseProps, {\n      onChange: handleChange,\n      onClear: handleClear\n    })),\n    overlayClassName: prefixCls\n  }, popoverProps), children || /*#__PURE__*/React.createElement(ColorTrigger, {\n    open: popupOpen,\n    className: mergeCls,\n    style: style,\n    color: colorValue,\n    prefixCls: prefixCls,\n    clearColor: clearColor,\n    disabled: disabled\n  })));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ColorPicker.displayName = 'ColorPicker';\n}\nconst PurePanel = genPurePanel(ColorPicker, 'color-picker', prefixCls => prefixCls);\nColorPicker._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default ColorPicker;","map":{"version":3,"names":["classNames","useMergedState","React","useContext","useState","ConfigContext","Popover","theme","ColorPickerPanel","ColorTrigger","useColorState","useStyle","customizePrefixCls","generateColor","genPurePanel","ColorPicker","props","value","defaultValue","format","allowClear","presets","children","trigger","open","disabled","placement","arrow","style","className","rootClassName","styles","onFormatChange","onChange","onOpenChange","getPopupContainer","getPrefixCls","direction","token","useToken","colorValue","setColorValue","colorPrimary","popupOpen","setPopupOpen","postState","openData","clearColor","setClearColor","prefixCls","wrapSSR","hashId","mergeRootCls","mergeCls","handleChange","data","color","toHsb","a","toHexString","handleClear","clear","popoverProps","colorBaseProps","createElement","Object","assign","popup","content","onClear","overlayClassName","process","env","NODE_ENV","displayName","PurePanel","_InternalPanelDoNotUseOrYouWillBeFired"],"sources":["C:/Users/stef_/Desktop/frontend/node_modules/antd/es/color-picker/ColorPicker.js"],"sourcesContent":["import classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useContext, useState } from 'react';\nimport { ConfigContext } from '../config-provider/context';\nimport Popover from '../popover';\nimport theme from '../theme';\nimport ColorPickerPanel from './ColorPickerPanel';\nimport ColorTrigger from './components/ColorTrigger';\nimport useColorState from './hooks/useColorState';\nimport useStyle from './style/index';\nimport { customizePrefixCls, generateColor } from './util';\nimport genPurePanel from '../_util/PurePanel';\nconst ColorPicker = props => {\n  const {\n    value,\n    defaultValue,\n    format,\n    allowClear = false,\n    presets,\n    children,\n    trigger = 'click',\n    open,\n    disabled,\n    placement = 'bottomLeft',\n    arrow = true,\n    style,\n    className,\n    rootClassName,\n    styles,\n    onFormatChange,\n    onChange,\n    onOpenChange,\n    getPopupContainer\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = useContext(ConfigContext);\n  const {\n    token\n  } = theme.useToken();\n  const [colorValue, setColorValue] = useColorState(token.colorPrimary, {\n    value,\n    defaultValue\n  });\n  const [popupOpen, setPopupOpen] = useMergedState(false, {\n    value: open,\n    postState: openData => !disabled && openData,\n    onChange: onOpenChange\n  });\n  const [clearColor, setClearColor] = useState(false);\n  const prefixCls = getPrefixCls('color-picker', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mergeRootCls = classNames(rootClassName, {\n    [`${prefixCls}-rtl`]: direction\n  });\n  const mergeCls = classNames(mergeRootCls, className, hashId);\n  const handleChange = data => {\n    const color = generateColor(data);\n    if (clearColor && color.toHsb().a > 0) {\n      setClearColor(false);\n    }\n    if (!value) {\n      setColorValue(color);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(color, color.toHexString());\n  };\n  const handleClear = clear => {\n    setClearColor(clear);\n  };\n  const popoverProps = {\n    open: popupOpen,\n    trigger,\n    placement,\n    arrow,\n    rootClassName,\n    getPopupContainer\n  };\n  const colorBaseProps = {\n    prefixCls,\n    color: colorValue,\n    allowClear,\n    clearColor,\n    disabled,\n    presets,\n    format,\n    onFormatChange\n  };\n  return wrapSSR( /*#__PURE__*/React.createElement(Popover, Object.assign({\n    style: styles === null || styles === void 0 ? void 0 : styles.popup,\n    onOpenChange: setPopupOpen,\n    content: /*#__PURE__*/React.createElement(ColorPickerPanel, Object.assign({}, colorBaseProps, {\n      onChange: handleChange,\n      onClear: handleClear\n    })),\n    overlayClassName: prefixCls\n  }, popoverProps), children || /*#__PURE__*/React.createElement(ColorTrigger, {\n    open: popupOpen,\n    className: mergeCls,\n    style: style,\n    color: colorValue,\n    prefixCls: prefixCls,\n    clearColor: clearColor,\n    disabled: disabled\n  })));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ColorPicker.displayName = 'ColorPicker';\n}\nconst PurePanel = genPurePanel(ColorPicker, 'color-picker', prefixCls => prefixCls);\nColorPicker._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default ColorPicker;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}