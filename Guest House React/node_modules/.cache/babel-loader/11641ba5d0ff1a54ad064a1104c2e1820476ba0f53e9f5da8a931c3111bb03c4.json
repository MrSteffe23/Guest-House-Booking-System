{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stef_\\\\Desktop\\\\frontend\\\\src\\\\screens\\\\LoginScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginScreen() {\n  _s();\n  const [username, setUsername] = useState([]);\n  const [password, setPassword] = useState([]);\n  function logIn() {\n    const admin = {\n      username,\n      password\n    };\n    const fetchData = async () => {\n      try {\n        const responseAdmin = await axios.get(`/api/v1/admins/${username}/${password}`);\n      } catch (error) {\n        console.log('Error not a valid ADMIN:', error);\n        alert('Not a valid admin account!');\n      }\n    };\n    fetchData();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boxshadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"login\",\n            children: \"Log-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"*Here you can log-in just if you are an \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 56\n            }, this), \"*\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control mt-1 inputstyling\",\n            placeholder: \"username\",\n            value: username,\n            onChange: e => {\n              setUsername(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control mt-1 inputstyling\",\n            placeholder: \"password\",\n            rows: 4,\n            value: password,\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: '#',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mt-3\",\n              onClick: logIn,\n              children: \"Log-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginScreen, \"k/Skrondg/7Ap5hZF/XVnP9g3BY=\");\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginScreen","_s","username","setUsername","password","setPassword","logIn","admin","fetchData","responseAdmin","get","error","console","log","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","rows","Link","to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/stef_/Desktop/frontend/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction LoginScreen() {\r\n\r\n  const [username, setUsername] = useState([]);\r\n  const [password, setPassword] = useState([]);\r\n\r\n  function logIn() {\r\n    const admin = {\r\n      username,\r\n      password\r\n    }\r\n    const fetchData = async () => {\r\n      try {\r\n        const responseAdmin = await axios.get(`/api/v1/admins/${username}/${password}`);\r\n      } catch (error) {\r\n        console.log('Error not a valid ADMIN:', error);\r\n        alert('Not a valid admin account!');\r\n      }\r\n    };\r\n    fetchData();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='row justify-content-center mt-5'>\r\n        <div className='col-md-5'>\r\n          <div className='boxshadow'>\r\n            <h1 className='login'>Log-in</h1>\r\n            <p>*Here you can log-in just if you are an <b>admin</b>*</p>\r\n            <input type=\"text\" className='form-control mt-1 inputstyling' placeholder='username'\r\n              value={username} onChange={(e) => { setUsername(e.target.value) }} />\r\n            <input type=\"text\" className='form-control mt-1 inputstyling' placeholder='password' rows={4}\r\n              value={password} onChange={(e) => { setPassword(e.target.value) }} />\r\n            <Link to={'#'}>\r\n            <button className='btn btn-primary mt-3' onClick={logIn} >Log-in</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}