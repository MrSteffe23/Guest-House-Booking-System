{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stef_\\\\Desktop\\\\frontend\\\\src\\\\components\\\\ImageUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploadForm(_ref) {\n  _s();\n  let {\n    type,\n    onImageUpload\n  } = _ref;\n  const [file, setFile] = useState(null);\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const handleFileChange = event => {\n    setFile(event.target.files);\n    setUploadSuccess(false); // Clear upload success message when new files are selected\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file || file.length === 0) {\n      console.error('No files selected');\n      return;\n    }\n    try {\n      for (let i = 0; i < file.length; i++) {\n        const formData = new FormData();\n        formData.append('image', file[i]);\n        await axios.post(`/api/v1/images/${type}`, formData);\n        console.log(`Image ${i + 1} uploaded successfully`);\n\n        // Do something on successful upload\n      }\n\n      setUploadSuccess(true); // Set upload success message to true after successful upload\n      setFile(null); // Clear selected files\n\n      // Call the onImageUpload callback with the uploaded image IDs\n      if (typeof onImageUpload === 'function') {\n        console.log(\"aici\");\n        onImageUpload(uploadedImageIds);\n      }\n    } catch (error) {\n      console.error('Error uploading images:', error);\n      // Handle upload error\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      multiple: true,\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"PHOTOS ADDED SUCCESSFULLY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploadForm, \"dOcTQSRm59hlPa6CVt/8qtE5PRw=\");\n_c = ImageUploadForm;\nexport default ImageUploadForm;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploadForm","_ref","_s","type","onImageUpload","file","setFile","uploadSuccess","setUploadSuccess","handleFileChange","event","target","files","handleSubmit","preventDefault","length","console","error","i","formData","FormData","append","post","log","uploadedImageIds","onSubmit","children","accept","multiple","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/stef_/Desktop/frontend/src/components/ImageUploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ImageUploadForm({ type, onImageUpload }) {\r\n  const [file, setFile] = useState(null);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false);\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files);\r\n    setUploadSuccess(false); // Clear upload success message when new files are selected\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!file || file.length === 0) {\r\n      console.error('No files selected');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      for (let i = 0; i < file.length; i++) {\r\n        const formData = new FormData();\r\n        formData.append('image', file[i]);\r\n\r\n        await axios.post(`/api/v1/images/${type}`, formData);\r\n        console.log(`Image ${i + 1} uploaded successfully`);\r\n\r\n        // Do something on successful upload\r\n      }\r\n\r\n      setUploadSuccess(true); // Set upload success message to true after successful upload\r\n      setFile(null); // Clear selected files\r\n\r\n      // Call the onImageUpload callback with the uploaded image IDs\r\n      if (typeof onImageUpload === 'function') {\r\n        console.log(\"aici\");\r\n        onImageUpload(uploadedImageIds);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n      // Handle upload error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"file\" accept=\"image/*\" multiple onChange={handleFileChange} />\r\n      <button type=\"submit\">Upload Images</button>\r\n      {uploadSuccess && <p>PHOTOS ADDED SUCCESSFULLY</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ImageUploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,IAAI;IAAEC;EAAc,CAAC,GAAAH,IAAA;EAC9C,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMa,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3BJ,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3B,CAAC;;EAED,MAAMK,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpCA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACT,IAAI,IAAIA,IAAI,CAACU,MAAM,KAAK,CAAC,EAAE;MAC9BC,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;MAClC;IACF;IAEA,IAAI;MACF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,IAAI,CAACU,MAAM,EAAEG,CAAC,EAAE,EAAE;QACpC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEhB,IAAI,CAACa,CAAC,CAAC,CAAC;QAEjC,MAAMrB,KAAK,CAACyB,IAAI,CAAE,kBAAiBnB,IAAK,EAAC,EAAEgB,QAAQ,CAAC;QACpDH,OAAO,CAACO,GAAG,CAAE,SAAQL,CAAC,GAAG,CAAE,wBAAuB,CAAC;;QAEnD;MACF;;MAEAV,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;MACxBF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEf;MACA,IAAI,OAAOF,aAAa,KAAK,UAAU,EAAE;QACvCY,OAAO,CAACO,GAAG,CAAC,MAAM,CAAC;QACnBnB,aAAa,CAACoB,gBAAgB,CAAC;MACjC;IAEF,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;IACF;EACF,CAAC;;EAED,oBACElB,OAAA;IAAM0B,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBAC3B3B,OAAA;MAAOI,IAAI,EAAC,MAAM;MAACwB,MAAM,EAAC,SAAS;MAACC,QAAQ;MAACC,QAAQ,EAAEpB;IAAiB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3ElC,OAAA;MAAQI,IAAI,EAAC,QAAQ;MAAAuB,QAAA,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3C1B,aAAa,iBAAIR,OAAA;MAAA2B,QAAA,EAAG;IAAyB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEX;AAAC/B,EAAA,CAlDQF,eAAe;AAAAkC,EAAA,GAAflC,eAAe;AAoDxB,eAAeA,eAAe;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}